<?xml version="1.0" encoding="utf-8"?>
<!--  Version: 2024.3.0.0 Erstelldatum: 2024-05-02 -->
<xs:schema xmlns:elsterheaderbasis="http://www.elster.de/elsterxml/schema/headerbasis/v3" xmlns:elster="http://www.elster.de/elsterxml/schema/v11" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.elster.de/elsterxml/schema/v11" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1">
	<xs:import namespace="http://www.elster.de/elsterxml/schema/headerbasis/v3" schemaLocation="./headerbasis000003.xsd"/>
	<xs:element name="Datei">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Verschluesselung" type="elsterheaderbasis:VerschluesselungSType"/>
				<xs:element name="Kompression" type="elsterheaderbasis:KompressionSType"/>
				<xs:element name="TransportSchluessel" type="elsterheaderbasis:TransportSchluesselSType" minOccurs="0"/>
				<xs:element name="Erstellung" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Eric" minOccurs="0">
								<xs:complexType mixed="true">
									<xs:complexContent>
										<xs:restriction base="xs:anyType">
											<xs:sequence>
												<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
											</xs:sequence>
										</xs:restriction>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="DatenArt" type="elsterheaderbasis:DatenArtSType"/>
	<xs:element name="DatenLieferant">
		<xs:annotation>
			<xs:documentation xml:lang="DE">Der Inhalt des Elements "DatenLieferant" darf vor der Verschluesselung nicht laenger als 256 Zeichen sein.
Datenlieferant ist der für die Datenlieferung Verantwortliche.

Im Element TransferHeader: 
Der Übermittler der Datenlieferung. 
Der Inhalt des Elements "TransferHeader/DatenLieferant" ist nach demselben Verfahren zu verschluesseln, wie der Inhalt des Elements DatenTeil.

Im Element NutzdatenHeader:
Der Ersteller der Nutzdaten, nicht zwingend identisch mit dem Übermittler der Daten.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="elsterheaderbasis:BaseStringSType">
				<!-- <xs:minLength value="1"/> -->
				<xs:minLength value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="EingangsDatum" type="elsterheaderbasis:EingangsDatumSType">
		<xs:annotation>
			<xs:documentation xml:lang="DE">Das Element EingangsDatum wird im Antwort-XML vom ELSTER Eingangsserver eingefügt und enthaelt das serverseitige Eingangsdatum.</xs:documentation>
			<xs:documentation xml:lang="DE">Format: JJJJMMTThhmmss, 14-stellig numerisch</xs:documentation>
			<xs:documentation xml:lang="de">Das Element EingangsDatum darf vom Datenlieferant nicht geliefert werden (auch nicht leer).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HerstellerID" type="elsterheaderbasis:HerstellerIDSType"/>
	<xs:element name="RC" type="elster:RCCType">
		<xs:annotation>
			<xs:documentation xml:lang="de">Das Element ReturnCode ist im Antwort XML enthalten und enthaelt entweder die Bestaetigung, dass die Uebermittlung der Datenlieferung erfolgreich war oder die entsprechende Fehlermeldung.</xs:documentation>
			<xs:documentation xml:lang="de">Das Element soll vom Datenlieferant nicht geliefert werden (auch nicht leer)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SigUser">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:restriction base="xs:anyType">
					<xs:sequence>
						<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Testmerker" type="elsterheaderbasis:TestmerkerSType">
		<xs:annotation>
			<xs:documentation xml:lang="de">Das Element Testmerker muss vom Datenlieferant gefuellt werden um eine Testlieferung zu kennzeichnen. Wenn das Element nicht vorhanden ist, dann gilt dies als Echtfall.</xs:documentation>
			<xs:documentation xml:lang="de">Das Element Testmerker gilt für die gesamte Datenlieferung !!!</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TransferTicket" type="elsterheaderbasis:TransferTicketSType">
		<xs:annotation>
			<xs:documentation xml:lang="de">Das Element TransferTicket wird im Antwort-XML vom ELSTER Eingangsserver eingefuegt.</xs:documentation>
			<xs:documentation xml:lang="de">Das Element TransferTicket darf vom Datenlieferant nicht geliefert werden (auch nicht leer).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Verfahren" type="elsterheaderbasis:VerfahrenSType"/>
	<xs:element name="VersionClient" type="elsterheaderbasis:VersionClientSType">
		<xs:annotation>
			<xs:documentation xml:lang="DE">Das optionale Element soll dem Softwarehersteller zur Selbstverwaltung seiner Programmversionen dienen. Beispiel:  ABC Programm Version 1</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Vorgang" type="elsterheaderbasis:VorgangSType"/>
	<xs:element name="Zusatz" type="elster:ZusatzCType"/>
	<xs:complexType name="RCCType">
		<xs:annotation>
			<xs:documentation xml:lang="de">ReturnCode ist nur im AntwortXML vorhanden und  wird  in der Clearingstelle gesetzt und gefuellt. Im TransferHeader ist es in jedem AntwortXML enthalten.</xs:documentation>
			<xs:documentation xml:lang="de">Das Element darf vom Datenlieferant nicht geliefert werden (auch nicht leer)</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="Rueckgabe">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code">
							<xs:simpleType>
								<xs:annotation>
									<xs:documentation xml:lang="DE">Externer Fehlercode: entweder eine "0" wenn keine Fehler aufgetreten sind oder eine Fehlernummer, wenn Fehler aufgetreten sind</xs:documentation>
								</xs:annotation>
								<xs:restriction base="elsterheaderbasis:BaseStringSType"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Text" type="elsterheaderbasis:BaseStringSType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Stack" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Code">
							<xs:simpleType>
								<xs:annotation>
									<xs:documentation xml:lang="DE">Interner Fehlercode</xs:documentation>
								</xs:annotation>
								<xs:restriction base="elsterheaderbasis:BaseStringSType"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Text" type="elsterheaderbasis:BaseStringSType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZusatzCType">
		<xs:annotation>
			<xs:documentation>Das Element Info darf von einem Hersteller bis zu 9-Mal geliefert werrden, </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Info" minOccurs="0" maxOccurs="10">
				<xs:simpleType>
					<xs:annotation>
						<xs:documentation xml:lang="de">Das Element Info kann vom Datenlieferant für eigene Zusaetze / Informationen genutzt werden.</xs:documentation>
					</xs:annotation>
					<xs:restriction base="elsterheaderbasis:BaseStringSType">
						<xs:minLength value="1"/>
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ElsterInfo" minOccurs="0" maxOccurs="10">
				<xs:simpleType>
					<xs:annotation>
						<xs:documentation xml:lang="de">Das Element KANN im AntwortXML enthalten sein, wenn zu dieser Datenlieferung spezielle Informationen an den Anwender zurueck gegeben werden sollen. Beispiel: bei authentifzierten Datenliefern: Information ueber baldigen Zertifikatsablauf etc.</xs:documentation>
						<xs:documentation xml:lang="de">Das Element ElsterInfo darf vom Datenlieferant nicht geliefert werden (auch nicht leer)</xs:documentation>
					</xs:annotation>
					<xs:restriction base="elsterheaderbasis:BaseStringSType">
						<xs:minLength value="1"/>
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>